#!/usr/bin/env node
/**
 * Generate STANDARD_EMOJIS from Slack's official emoji mapping data
 *
 * This script converts HTML entity format (&#xXXXX;) to Unicode characters
 * and generates a TypeScript constant that can be used in emojiService.ts
 */

import * as fs from 'fs';
import * as path from 'path';
import { fileURLToPath } from 'url';

// ESM equivalent of __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// HTMLエンティティをUnicodeに変換
function htmlEntityToEmoji(entity: string): string {
  // &#x1F375; のような形式から 🍵 に変換
  const hexCode = entity.replace('&#x', '').replace(';', '');

  // 複数のコードポイントをサポート（ZWJ絵文字など）
  const codes = hexCode.split('-').map(code => parseInt(code, 16));

  return String.fromCodePoint(...codes);
}

async function generateEmojiMappings() {
  console.log('🚀 Starting emoji mapping generation...\n');

  // 入力ファイルを読み込む
  const inputPath = path.join(__dirname, 'slack_emoji_mapping.json');
  console.log(`📂 Reading: ${inputPath}`);

  const rawData = fs.readFileSync(inputPath, 'utf8');
  const slackMapping = JSON.parse(rawData);

  console.log(`✅ Loaded ${Object.keys(slackMapping).length} emoji mappings\n`);

  // STANDARD_EMOJISオブジェクトを生成
  const standardEmojis: Record<string, string> = {};
  let successCount = 0;
  let errorCount = 0;

  for (const [name, htmlEntity] of Object.entries(slackMapping)) {
    try {
      standardEmojis[name] = htmlEntityToEmoji(htmlEntity as string);
      successCount++;
    } catch (error) {
      console.error(`❌ Failed to convert: ${name} = ${htmlEntity}`);
      errorCount++;
    }
  }

  console.log(`✅ Successfully converted: ${successCount} emojis`);
  if (errorCount > 0) {
    console.log(`⚠️  Failed to convert: ${errorCount} emojis`);
  }
  console.log();

  // TypeScriptコードとして出力
  const output = `/**
 * Auto-generated from Slack's official emoji mapping data
 * Source: https://gist.github.com/nickgrealy/f3f27874d306a5d5048f02f0d3e14c07
 *
 * DO NOT EDIT THIS FILE MANUALLY
 * To regenerate, run: npm run generate-emojis
 */

export const STANDARD_EMOJIS: Record<string, string> = ${JSON.stringify(standardEmojis, null, 2)};
`;

  // 出力ファイルに書き込む
  const outputPath = path.join(__dirname, '..', 'src', 'lib', 'services', 'generatedEmojis.ts');
  console.log(`💾 Writing to: ${outputPath}`);

  fs.writeFileSync(outputPath, output, 'utf8');

  console.log(`✅ Generated ${Object.keys(standardEmojis).length} emoji mappings`);
  console.log(`📦 File size: ${(fs.statSync(outputPath).size / 1024).toFixed(2)} KB`);
  console.log('\n🎉 Done!');
}

// 実行
generateEmojiMappings().catch(error => {
  console.error('❌ Error:', error);
  process.exit(1);
});
